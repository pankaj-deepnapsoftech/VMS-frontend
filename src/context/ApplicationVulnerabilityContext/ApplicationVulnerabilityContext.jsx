import { createContext, useEffect, useState } from "react";
import { useAuthContext } from "..";
import { AxiosHandler } from "@/config/AxiosConfig";





export const ApplicationVulnerabilityContext = createContext();

const ApplicationVulnerabilityContextProvider = ({ children }) => {
	const { token } = useAuthContext()

	const [criticalHighVulnerableItemsData, setCriticalHighVulnerableItemsData] = useState([])

	const CriticalHighVulnerableItems = async () => {

		try {

			const res = await AxiosHandler.get("/data/CriticalHighVulnerableItems");
			setCriticalHighVulnerableItemsData(res.data.results);
			console.log(res.data, "&&&&&&&&&&&&&&&")
		} catch (error) {
			console.log(error)
		}
	}


	useEffect(() => {
		if (token) {
			CriticalHighVulnerableItems()
		}
	}, [token])

	return (
		<ApplicationVulnerabilityContext.Provider value={{ criticalHighVulnerableItemsData }}>
			{children}
		</ApplicationVulnerabilityContext.Provider>
	)
}


export default ApplicationVulnerabilityContextProvider