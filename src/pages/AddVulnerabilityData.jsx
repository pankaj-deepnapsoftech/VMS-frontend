import React, { useState } from "react";

const VulnerabilityForm = () => {
  const [formData, setFormData] = useState({
    scanType: "",
    assetType: "",
    threatType: "",
    cveAvailable: "",
    cveId: "",
    exploitAvailable: "",
    exploitDetails: "",
    epssScore: "",
    exploitComplexity: "",
    asset: "",
    locationUrl: "",
    title: "",
    description: "",
    severity: "",
    cvss: "",
    referenceUrl: "",
    pocText: "",
    pocFile: null,
  });

  const handleChange = (e) => {
    const { name, value, files } = e.target;
    if (files) {
      setFormData({ ...formData, [name]: files[0] });
    } else {
      setFormData({ ...formData, [name]: value });
    }
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log(formData);
    // Submit form logic here
  };

  return (
    <form
      onSubmit={handleSubmit}
      className="bg-gradient-custom h-screen pt-20 text-white p-6 rounded-lg max-w-7xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"
    >
      {/* Row 1 */}
      <div>
        <label className="block mb-1 text-sm">Scan Type</label>
        <select
          name="scanType"
          value={formData.scanType}
          onChange={handleChange}
          className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
        >
          <option value="">-- Select Scan Type --</option>
          <option value="Automatic">Automatic</option>
          <option value="Manual">Manual</option>
        </select>
      </div>

      <div>
        <label className="block mb-1 text-sm">Asset Type</label>
        <select
          name="assetType"
          value={formData.assetType}
          onChange={handleChange}
          className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
        >
          <option value="">-- Select Asset Type --</option>
          <option value="Infrastructure">Infrastructure</option>
          <option value="Application">Application</option>
        </select>
      </div>

      <div>
        <label className="block mb-1 text-sm">Threat Type</label>
        <select
          name="threatType"
          value={formData.threatType}
          onChange={handleChange}
          className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
        >
          <option value="">-- Select Threat Type --</option>
          <option value="Vulnerability">Vulnerability</option>
          <option value="Misconfiguration">Misconfiguration</option>
        </select>
      </div>

      {/* Row 2 */}
      <div>
        <label className="block mb-1 text-sm">CVE Available</label>
        <select
          name="cveAvailable"
          value={formData.cveAvailable}
          onChange={handleChange}
          className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
        >
          <option value="">-- Select --</option>
          <option value="Yes">Yes</option>
          <option value="No">No</option>
        </select>
      </div>

      {formData.cveAvailable === "Yes" && (
        <>
          <div>
            <label className="block mb-1 text-sm">CVE ID</label>
            <input
              type="text"
              name="cveId"
              value={formData.cveId}
              onChange={handleChange}
              className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
              placeholder="Enter CVE ID"
            />
          </div>

          <div>
            <label className="block mb-1 text-sm">
              Exploit Available (CISA KEV)
            </label>
            <select
              name="exploitAvailable"
              value={formData.exploitAvailable}
              onChange={handleChange}
              className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
            >
              <option value="">-- Select --</option>
              <option value="Yes">Yes</option>
              <option value="No">No</option>
            </select>
          </div>

          {formData.exploitAvailable === "Yes" && (
            <div>
              <label className="block mb-1 text-sm">
                Exploit Details (CISA KEV)
              </label>
              <input
                type="text"
                name="exploitDetails"
                value={formData.exploitDetails}
                onChange={handleChange}
                className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
                placeholder="Exploit Details"
              />
            </div>
          )}

          <div>
            <label className="block mb-1 text-sm">EPSS Score</label>
            <input
              type="text"
              name="epssScore"
              value={formData.epssScore}
              onChange={handleChange}
              className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
              placeholder="EPSS Score"
            />
          </div>
        </>
      )}

      {formData.cveAvailable === "No" && (
        <div>
          <label className="block mb-1 text-sm">Exploit Complexity</label>
          <select
            name="exploitComplexity"
            value={formData.exploitComplexity}
            onChange={handleChange}
            className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
          >
            <option value="">-- Select Complexity --</option>
            <option value="Without Authentication">
              Without Authentication
            </option>
            <option value="Low Privilege Required">
              Low Privilege Required
            </option>
            <option value="Full Privilege Required">
              Full Privilege Required
            </option>
          </select>
        </div>
      )}

      {/* Next rows */}
      <div>
        <label className="block mb-1 text-sm">Asset</label>
        <input
          type="text"
          name="asset"
          value={formData.asset}
          onChange={handleChange}
          className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
          placeholder="Asset Name"
        />
      </div>

      <div>
        <label className="block mb-1 text-sm">Location / Impact URL</label>
        <input
          type="text"
          name="locationUrl"
          value={formData.locationUrl}
          onChange={handleChange}
          className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
          placeholder="Impact URL"
        />
      </div>

      <div>
        <label className="block mb-1 text-sm">Title</label>
        <input
          type="text"
          name="title"
          value={formData.title}
          onChange={handleChange}
          className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
          placeholder="Title"
        />
      </div>

      <div>
        <label className="block mb-1 text-sm">Description</label>
        <textarea
          name="description"
          value={formData.description}
          onChange={handleChange}
          rows="2"
          className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
          placeholder="Description"
        />
      </div>

      <div>
        <label className="block mb-1 text-sm">Severity</label>
        <input
          type="text"
          name="severity"
          value={formData.severity}
          onChange={handleChange}
          className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
          placeholder="Severity"
        />
      </div>

      <div>
        <label className="block mb-1 text-sm">CVSS</label>
        <input
          type="text"
          name="cvss"
          value={formData.cvss}
          onChange={handleChange}
          className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
          placeholder="CVSS"
        />
      </div>

      <div>
        <label className="block mb-1 text-sm">Reference URL</label>
        <input
          type="text"
          name="referenceUrl"
          value={formData.referenceUrl}
          onChange={handleChange}
          className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
          placeholder="Reference URL"
        />
      </div>

      {/* Proof of Concept */}
      <div className="md:col-span-2 lg:col-span-3">
        <label className="block mb-1 text-sm">Proof of Concept (POC)</label>
        <textarea
          name="pocText"
          value={formData.pocText}
          onChange={handleChange}
          rows="3"
          className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
          placeholder="POC Details"
        />
        <input
          type="file"
          name="pocFile"
          onChange={handleChange}
          className="mt-2 w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
        />
      </div>

      {/* Submit Button Full Width */}
      <div className="md:col-span-2 lg:col-span-3 flex justify-center mb-4">
        <button
          type="submit"
          className="w-[100px] bg-blue-700 hover:bg-blue-900 rounded text-white font-semibold text-center text-sm"
        >
          Submit
        </button>
      </div>
    </form>
  );
};

export default VulnerabilityForm;
