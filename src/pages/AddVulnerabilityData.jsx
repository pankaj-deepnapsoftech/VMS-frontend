import { useFormik } from "formik";
import React, { useState } from "react";

const VulnerabilityForm = () => {
  const {values,errors,touched,handleChange,handleBlur,handleSubmit} = useFormik({
    initialValues:{
    scan_type:"",
    asset_type: "",
    threat_type: "",
    CVE: "",
    CVE_ID: "",
    Exploit_Availale: "",
    Exploit_Details: "",
    EPSS: "",
    exploit_complexity: "",
    Location: "",
    Title: "",
    Description: "",
    Severity: "",
    CVSS: "",
    Reference_URL: "",
    BusinessApplication: "",
    InfraStructureAsset: "",
    Proof_of_Concept: null,
  }});


  return (
    <form
      onSubmit={handleSubmit}
      className="bg-gradient-custom h-screen pt-20 text-white p-6 rounded-lg max-w-7xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"
    >
      {/* Row 1 */}
      <div>
        <label className="block mb-1 text-sm">Scan Type</label>
        <select
          name="scan_type"
          value={values.scan_type}
          onChange={handleChange}
          onBlur={handleBlur}
          className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
        >
          <option value="">-- Select Scan Type --</option>
          <option value="Automatic">Automatic</option>
          <option value="Manual">Manual</option>
        </select>
      </div>

      <div>
        <label className="block mb-1 text-sm">Asset Type</label>
        <select
          name="assetType"
          value={values.assetType}
          onChange={handleChange}
          className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
        >
          <option value="">-- Select Asset Type --</option>
          <option value="Infrastructure">Infrastructure</option>
          <option value="Application">Application</option>
        </select>
      </div>

      <div>
        <label className="block mb-1 text-sm">Threat Type</label>
        <select
          name="threatType"
          value={values.threatType}
          onChange={handleChange}
          className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
        >
          <option value="">-- Select Threat Type --</option>
          <option value="Vulnerability">Vulnerability</option>
          <option value="Misconfiguration">Misconfiguration</option>
        </select>
      </div>

      {/* Row 2 */}
      <div>
        <label className="block mb-1 text-sm">CVE Available</label>
        <select
          name="cveAvailable"
          value={values.cveAvailable}
          onChange={handleChange}
          className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
        >
          <option value="">-- Select --</option>
          <option value="Yes">Yes</option>
          <option value="No">No</option>
        </select>
      </div>

      {values.cveAvailable === "Yes" && (
        <>
          <div>
            <label className="block mb-1 text-sm">CVE ID</label>
            <input
              type="text"
              name="cveId"
              value={values.cveId}
              onChange={handleChange}
              className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
              placeholder="Enter CVE ID"
            />
          </div>

          <div>
            <label className="block mb-1 text-sm">
              Exploit Available (CISA KEV)
            </label>
            <select
              name="exploitAvailable"
              value={values.exploitAvailable}
              onChange={handleChange}
              className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
            >
              <option value="">-- Select --</option>
              <option value="Yes">Yes</option>
              <option value="No">No</option>
            </select>
          </div>

          {values.exploitAvailable === "Yes" && (
            <div>
              <label className="block mb-1 text-sm">
                Exploit Details (CISA KEV)
              </label>
              <input
                type="text"
                name="exploitDetails"
                value={values.exploitDetails}
                onChange={handleChange}
                className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
                placeholder="Exploit Details"
              />
            </div>
          )}

          <div>
            <label className="block mb-1 text-sm">EPSS Score</label>
            <input
              type="text"
              name="epssScore"
              value={values.epssScore}
              onChange={handleChange}
              className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
              placeholder="EPSS Score"
            />
          </div>
        </>
      )}

      {values.cveAvailable === "No" && (
        <div>
          <label className="block mb-1 text-sm">Exploit Complexity</label>
          <select
            name="exploitComplexity"
            value={values.exploitComplexity}
            onChange={handleChange}
            className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
          >
            <option value="">-- Select Complexity --</option>
            <option value="Without Authentication">
              Without Authentication
            </option>
            <option value="Low Privilege Required">
              Low Privilege Required
            </option>
            <option value="Full Privilege Required">
              Full Privilege Required
            </option>
          </select>
        </div>
      )}

      {/* Next rows */}
      <div>
        <label className="block mb-1 text-sm">Asset</label>
        <input
          type="text"
          name="asset"
          value={values.asset}
          onChange={handleChange}
          className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
          placeholder="Asset Name"
        />
      </div>

      <div>
        <label className="block mb-1 text-sm">Location / Impact URL</label>
        <input
          type="text"
          name="locationUrl"
          value={values.locationUrl}
          onChange={handleChange}
          className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
          placeholder="Impact URL"
        />
      </div>

      <div>
        <label className="block mb-1 text-sm">Title</label>
        <input
          type="text"
          name="title"
          value={values.title}
          onChange={handleChange}
          className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
          placeholder="Title"
        />
      </div>

      <div>
        <label className="block mb-1 text-sm">Description</label>
        <textarea
          name="description"
          value={values.description}
          onChange={handleChange}
          rows="2"
          className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
          placeholder="Description"
        />
      </div>

      <div>
        <label className="block mb-1 text-sm">Severity</label>
        <input
          type="text"
          name="severity"
          value={values.severity}
          onChange={handleChange}
          className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
          placeholder="Severity"
        />
      </div>

      <div>
        <label className="block mb-1 text-sm">CVSS</label>
        <input
          type="text"
          name="cvss"
          value={values.cvss}
          onChange={handleChange}
          className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
          placeholder="CVSS"
        />
      </div>

      <div>
        <label className="block mb-1 text-sm">Reference URL</label>
        <input
          type="text"
          name="referenceUrl"
          value={values.referenceUrl}
          onChange={handleChange}
          className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
          placeholder="Reference URL"
        />
      </div>

      {/* Proof of Concept */}
      <div className="md:col-span-2 lg:col-span-3">
        <label className="block mb-1 text-sm">Proof of Concept (POC)</label>
        <textarea
          name="pocText"
          value={values.pocText}
          onChange={handleChange}
          rows="3"
          className="w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
          placeholder="POC Details"
        />
        <input
          type="file"
          name="pocFile"
          onChange={handleChange}
          className="mt-2 w-full p-2 rounded border border-gray-600 bg-[#252A3A] text-white focus:outline-none"
        />
      </div>

      {/* Submit Button Full Width */}
      <div className="md:col-span-2 lg:col-span-3 flex justify-center mb-4">
        <button
          type="submit"
          className="w-[100px] bg-blue-700 hover:bg-blue-900 rounded text-white font-semibold text-center text-sm"
        >
          Submit
        </button>
      </div>
    </form>
  );
};

export default VulnerabilityForm;
