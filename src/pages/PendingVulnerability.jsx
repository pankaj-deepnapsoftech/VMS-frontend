import { useState } from "react";

// Dummy vulnerability data
const vulnerabilities = [
  { id: 1, name: "SQL Injection", severity: "Critical", status: "Open" },
  { id: 2, name: "XSS Attack", severity: "Medium", status: "Open" },
  { id: 3, name: "Unpatched Software", severity: "Low", status: "Close" },
  { id: 4, name: "Insecure Config", severity: "Critical", status: "Open" },
  { id: 5, name: "Weak Password Policy", severity: "Medium", status: "Close" },
];

const tabs = ["Open", "Close", "Low", "Medium", "Critical"];

export default function PendingVulnerability() {
  const [activeTab, setActiveTab] = useState("Open");

  // Filter data based on selected tab
  const filteredData =
    activeTab === "Open" || activeTab === "Close"
      ? vulnerabilities.filter((v) => v.status === activeTab)
      : vulnerabilities.filter((v) => v.severity === activeTab);

  return (
    <div className="p-6 bg-slate-900 min-h-screen text-white">
      <h1 className="text-2xl font-semibold mb-6">
        Pending Vulnerabilities
      </h1>

      {/* Tabs */}
      <div className="flex gap-3 mb-6">
        {tabs.map((tab) => (
          <button
            key={tab}
            onClick={() => setActiveTab(tab)}
            className={`px-4 py-2 rounded-lg text-sm font-medium transition
              ${
                activeTab === tab
                  ? "bg-blue-600 text-white"
                  : "bg-slate-800 text-slate-300 hover:bg-slate-700"
              }`}
          >
            {tab}
          </button>
        ))}
      </div>

      {/* Table */}
      <div className="overflow-x-auto bg-slate-800 rounded-xl shadow-md border border-slate-700">
        <table className="w-full text-sm">
          <thead className="bg-slate-700 text-left">
            <tr>
              <th className="px-4 py-2">ID</th>
              <th className="px-4 py-2">Name</th>
              <th className="px-4 py-2">Severity</th>
              <th className="px-4 py-2">Status</th>
            </tr>
          </thead>
          <tbody>
            {filteredData.length > 0 ? (
              filteredData.map((item) => (
                <tr key={item.id} className="border-t border-slate-700">
                  <td className="px-4 py-2">{item.id}</td>
                  <td className="px-4 py-2">{item.name}</td>
                  <td className="px-4 py-2">{item.severity}</td>
                  <td className="px-4 py-2">{item.status}</td>
                </tr>
              ))
            ) : (
              <tr>
                <td
                  colSpan="4"
                  className="px-4 py-6 text-center text-slate-400"
                >
                  No vulnerabilities found for <b>{activeTab}</b>
                </td>
              </tr>
            )}
          </tbody>
        </table>
      </div>
    </div>
  );
}
